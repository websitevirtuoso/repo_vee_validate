{"version":3,"file":"VField.mjs","names":["VExpandXTransition","useInputIcon","VFieldLabel","IconValue","LoaderSlot","makeLoaderProps","useLoader","makeFocusProps","useFocus","makeThemeProps","provideTheme","useBackgroundColor","useTextColor","computed","ref","toRef","watch","animate","convertToUnit","EventProp","genericComponent","getUid","isOn","nullifyTransforms","pick","propsFactory","standardEasing","useRender","allowedVariants","makeVFieldProps","appendInnerIcon","bgColor","String","clearable","Boolean","clearIcon","type","default","active","color","dirty","disabled","error","label","persistentClear","prependInnerIcon","reverse","singleLine","variant","validator","v","includes","VField","name","inheritAttrs","props","id","emits","e","focused","val","setup","attrs","emit","slots","themeClasses","loaderClasses","focusClasses","isFocused","focus","blur","InputIcon","isActive","hasLabel","uid","labelRef","floatingLabelRef","controlRef","backgroundColorClasses","backgroundColorStyles","textColorClasses","textColorStyles","value","undefined","el","$el","targetEl","rect","targetRect","getBoundingClientRect","x","y","height","targetWidth","width","Math","abs","maxWidth","style","getComputedStyle","targetStyle","duration","parseFloat","transitionDuration","scale","getPropertyValue","visibility","transform","easing","direction","finished","then","removeProperty","flush","slotProps","onClick","target","document","activeElement","preventDefault","isOutlined","hasPrepend","hasClear","clear","hasAppend","for","loading","loader","class","filterFieldProps","keys","Object","filter","k"],"sources":["../../../src/components/VField/VField.tsx"],"sourcesContent":["// Styles\nimport './VField.sass'\n\n// Components\nimport { VExpandXTransition } from '@/components/transitions'\nimport { useInputIcon } from '@/components/VInput/InputIcon'\nimport { VFieldLabel } from './VFieldLabel'\n\n// Composables\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, ref, toRef, watch } from 'vue'\nimport {\n  animate,\n  convertToUnit,\n  EventProp,\n  genericComponent,\n  getUid,\n  isOn,\n  nullifyTransforms,\n  pick,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { MakeSlots } from '@/util'\nimport type { PropType, Ref } from 'vue'\nimport type { VInputSlot } from '@/components/VInput/VInput'\n\nconst allowedVariants = ['underlined', 'outlined', 'filled', 'solo', 'plain'] as const\ntype Variant = typeof allowedVariants[number]\n\nexport interface DefaultInputSlot {\n  isActive: Ref<boolean>\n  isFocused: Ref<boolean>\n  controlRef: Ref<HTMLElement | undefined>\n  focus: () => void\n  blur: () => void\n}\n\nexport interface VFieldSlot extends DefaultInputSlot {\n  props: Record<string, unknown>\n}\n\nexport const makeVFieldProps = propsFactory({\n  appendInnerIcon: IconValue,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: IconValue,\n    default: '$clear',\n  },\n  active: Boolean,\n  color: String,\n  dirty: Boolean,\n  disabled: Boolean,\n  error: Boolean,\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: IconValue,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'filled',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n\n  'onClick:clear': EventProp,\n  'onClick:appendInner': EventProp,\n  'onClick:prependInner': EventProp,\n\n  ...makeThemeProps(),\n  ...makeLoaderProps(),\n}, 'v-field')\n\nexport type VFieldSlots = MakeSlots<{\n  clear: []\n  'prepend-inner': [DefaultInputSlot & VInputSlot]\n  'append-inner': [DefaultInputSlot & VInputSlot]\n  label: [DefaultInputSlot & VInputSlot]\n  loader: [LoaderSlotProps]\n  default: [VFieldSlot]\n}>\n\nexport const VField = genericComponent<new <T>() => {\n  $props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (val: T) => any\n  }\n  $slots: VFieldSlots\n}>()({\n  name: 'VField',\n\n  inheritAttrs: false,\n\n  props: {\n    id: String,\n\n    ...makeFocusProps(),\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'click:control': (e: MouseEvent) => true,\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { loaderClasses } = useLoader(props)\n    const { focusClasses, isFocused, focus, blur } = useFocus(props)\n    const { InputIcon } = useInputIcon(props)\n\n    const isActive = computed(() => props.dirty || props.active)\n    const hasLabel = computed(() => !props.singleLine && !!(props.label || slots.label))\n\n    const uid = getUid()\n    const id = computed(() => props.id || `input-${uid}`)\n\n    const labelRef = ref<VFieldLabel>()\n    const floatingLabelRef = ref<VFieldLabel>()\n    const controlRef = ref<HTMLElement>()\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n      return (\n        isActive.value &&\n        isFocused.value &&\n        !props.error &&\n        !props.disabled\n      ) ? props.color : undefined\n    }))\n\n    watch(isActive, val => {\n      if (hasLabel.value) {\n        const el: HTMLElement = labelRef.value!.$el\n        const targetEl: HTMLElement = floatingLabelRef.value!.$el\n        const rect = nullifyTransforms(el)\n        const targetRect = targetEl.getBoundingClientRect()\n\n        const x = targetRect.x - rect.x\n        const y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2)\n\n        const targetWidth = targetRect.width / 0.75\n        const width = Math.abs(targetWidth - rect.width) > 1\n          ? { maxWidth: convertToUnit(targetWidth) }\n          : undefined\n\n        const style = getComputedStyle(el)\n        const targetStyle = getComputedStyle(targetEl)\n        const duration = parseFloat(style.transitionDuration) * 1000 || 150\n        const scale = parseFloat(targetStyle.getPropertyValue('--v-field-label-scale'))\n        const color = targetStyle.getPropertyValue('color')\n\n        el.style.visibility = 'visible'\n        targetEl.style.visibility = 'hidden'\n\n        animate(el, {\n          transform: `translate(${x}px, ${y}px) scale(${scale})`,\n          color,\n          ...width,\n        }, {\n          duration,\n          easing: standardEasing,\n          direction: val ? 'normal' : 'reverse',\n        }).finished.then(() => {\n          el.style.removeProperty('visibility')\n          targetEl.style.removeProperty('visibility')\n        })\n      }\n    }, { flush: 'post' })\n\n    const slotProps = computed<DefaultInputSlot>(() => ({\n      isActive,\n      isFocused,\n      controlRef,\n      blur,\n      focus,\n    }))\n\n    function onClick (e: MouseEvent) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault()\n      }\n\n      emit('click:control', e)\n    }\n\n    useRender(() => {\n      const isOutlined = props.variant === 'outlined'\n      const hasPrepend = (slots['prepend-inner'] || props.prependInnerIcon)\n      const hasClear = !!(props.clearable || slots.clear)\n      const hasAppend = !!(slots['append-inner'] || props.appendInnerIcon || hasClear)\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n\n      return (\n        <div\n          class={[\n            'v-field',\n            {\n              'v-field--active': isActive.value,\n              'v-field--appended': hasAppend,\n              'v-field--disabled': props.disabled,\n              'v-field--dirty': props.dirty,\n              'v-field--error': props.error,\n              'v-field--has-background': !!props.bgColor,\n              'v-field--persistent-clear': props.persistentClear,\n              'v-field--prepended': hasPrepend,\n              'v-field--reverse': props.reverse,\n              'v-field--single-line': props.singleLine,\n              'v-field--has-label': !!label,\n              [`v-field--variant-${props.variant}`]: true,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            focusClasses.value,\n            loaderClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            textColorStyles.value,\n          ]}\n          onClick={ onClick }\n          { ...attrs }\n        >\n          <div class=\"v-field__overlay\" />\n\n          <LoaderSlot\n            name=\"v-field\"\n            active={ props.loading }\n            color={ props.error ? 'error' : props.color }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-field__prepend-inner\">\n              { props.prependInnerIcon && (\n                <InputIcon key=\"prepend-icon\" name=\"prependInner\" />\n              ) }\n\n              { slots['prepend-inner']?.(slotProps.value) }\n            </div>\n          ) }\n\n          <div class=\"v-field__field\" data-no-activator=\"\">\n            { ['solo', 'filled'].includes(props.variant) && hasLabel.value && (\n              <VFieldLabel\n                key=\"floating-label\"\n                ref={ floatingLabelRef }\n                class={[textColorClasses.value]}\n                floating\n                for={ id.value }\n              >\n                { label }\n              </VFieldLabel>\n            ) }\n\n            <VFieldLabel ref={ labelRef } for={ id.value }>\n              { label }\n            </VFieldLabel>\n\n            { slots.default?.({\n              ...slotProps.value,\n              props: {\n                id: id.value,\n                class: 'v-field__input',\n              },\n              focus,\n              blur,\n            } as VFieldSlot) }\n          </div>\n\n          { hasClear && (\n            <VExpandXTransition key=\"clear\">\n              <div\n                class=\"v-field__clearable\"\n                v-show={ props.dirty }\n              >\n                { slots.clear\n                  ? slots.clear()\n                  : <InputIcon name=\"clear\" />\n                }\n              </div>\n            </VExpandXTransition>\n          ) }\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-field__append-inner\">\n              { slots['append-inner']?.(slotProps.value) }\n\n              { props.appendInnerIcon && (\n                <InputIcon key=\"append-icon\" name=\"appendInner\" />\n              ) }\n            </div>\n          ) }\n\n          <div\n            class={[\n              'v-field__outline',\n              textColorClasses.value,\n            ]}\n          >\n            { isOutlined && (\n              <>\n                <div class=\"v-field__outline__start\" />\n\n                { hasLabel.value && (\n                  <div class=\"v-field__outline__notch\">\n                    <VFieldLabel ref={ floatingLabelRef } floating for={ id.value }>\n                      { label }\n                    </VFieldLabel>\n                  </div>\n                ) }\n\n                <div class=\"v-field__outline__end\" />\n              </>\n            ) }\n\n            { ['plain', 'underlined'].includes(props.variant) && hasLabel.value && (\n              <VFieldLabel ref={ floatingLabelRef } floating for={ id.value }>\n                { label }\n              </VFieldLabel>\n            ) }\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      controlRef,\n    }\n  },\n})\n\nexport type VField = InstanceType<typeof VField>\n\n// TODO: this is kinda slow, might be better to implicitly inherit props instead\nexport function filterFieldProps (attrs: Record<string, unknown>) {\n  const keys = Object.keys(VField.props).filter(k => !isOn(k))\n  return pick(attrs, keys)\n}\n"],"mappings":"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"}