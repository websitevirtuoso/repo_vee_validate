{
  "version": 3,
  "sources": ["../../vuetify/src/composables/resizeObserver.ts"],
  "sourcesContent": ["// Utilities\nimport { onBeforeUnmount, readonly, ref, watch } from 'vue'\nimport type { DeepReadonly, Ref } from 'vue'\n\n// Globals\nimport { IN_BROWSER } from '@/util/globals'\n\ninterface ResizeState {\n  resizeRef: Ref<Element | undefined>\n  contentRect: DeepReadonly<Ref<DOMRectReadOnly | undefined>>\n}\n\nexport function useResizeObserver (callback?: ResizeObserverCallback): ResizeState {\n  const resizeRef = ref<Element>()\n  const contentRect = ref<DOMRectReadOnly>()\n\n  if (IN_BROWSER) {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      callback?.(entries, observer)\n\n      if (!entries.length) return\n\n      contentRect.value = entries[0].contentRect\n    })\n\n    onBeforeUnmount(() => {\n      observer.disconnect()\n    })\n\n    watch(resizeRef, (newValue, oldValue) => {\n      if (oldValue) {\n        observer.unobserve(oldValue)\n        contentRect.value = undefined\n      }\n\n      if (newValue) observer.observe(newValue)\n    }, {\n      flush: 'post',\n    })\n  }\n\n  return {\n    resizeRef,\n    contentRect: readonly(contentRect),\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;AAYO,SAASA,kBAAmBC,UAAgD;AACjF,QAAMC,YAAYC,IAAG;AACrB,QAAMC,cAAcD,IAAG;AAEvB,MAAIE,YAAY;AACd,UAAMC,WAAW,IAAIC,eAAgBC,aAAmC;AACtEP,kBAAQ,OAAR,SAAAA,SAAWO,SAASF,QAAZ;AAER,UAAI,CAACE,QAAQC;AAAQ;AAErBL,kBAAYM,QAAQF,QAAQ,GAAGJ;IAChC,CANgB;AAQjBO,oBAAgB,MAAM;AACpBL,eAASM,WAAT;IACD,CAFc;AAIfC,UAAMX,WAAW,CAACY,UAAUC,aAAa;AACvC,UAAIA,UAAU;AACZT,iBAASU,UAAUD,QAAnB;AACAX,oBAAYM,QAAQO;MACrB;AAED,UAAIH;AAAUR,iBAASY,QAAQJ,QAAjB;IACf,GAAE;MACDK,OAAO;IADN,CAPE;EAUN;AAED,SAAO;IACLjB;IACAE,aAAagB,SAAShB,WAAD;EAFhB;AAIR;",
  "names": ["useResizeObserver", "callback", "resizeRef", "ref", "contentRect", "IN_BROWSER", "observer", "ResizeObserver", "entries", "length", "value", "onBeforeUnmount", "disconnect", "watch", "newValue", "oldValue", "unobserve", "undefined", "observe", "flush", "readonly"]
}
