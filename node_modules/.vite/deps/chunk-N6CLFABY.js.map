{
  "version": 3,
  "sources": ["../../vuetify/src/components/VDefaultsProvider/VDefaultsProvider.tsx", "../../vuetify/src/composables/dimensions.ts", "../../vuetify/src/composables/border.ts", "../../vuetify/src/composables/elevation.ts", "../../vuetify/src/composables/variant.tsx", "../../vuetify/src/composables/location.ts", "../../vuetify/src/composables/position.ts", "../../vuetify/src/composables/router.tsx"],
  "sourcesContent": ["// Composables\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { defineComponent, toRefs } from 'vue'\n\n// Types\nimport type { DefaultsOptions } from '@/composables/defaults'\nimport type { PropType } from 'vue'\n\nexport const VDefaultsProvider = defineComponent({\n  name: 'VDefaultsProvider',\n\n  props: {\n    defaults: Object as PropType<DefaultsOptions>,\n    reset: [Number, String],\n    root: Boolean,\n    scoped: Boolean,\n  },\n\n  setup (props, { slots }) {\n    const { defaults, reset, root, scoped } = toRefs(props)\n\n    provideDefaults(defaults, {\n      reset,\n      root,\n      scoped,\n    })\n\n    return () => slots.default?.()\n  },\n})\n", "// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, propsFactory } from '@/util'\n\n// Types\nexport interface DimensionProps {\n  height?: number | string\n  maxHeight?: number | string\n  maxWidth?: number | string\n  minHeight?: number | string\n  minWidth?: number | string\n  width?: number | string\n}\n\n// Composables\nexport const makeDimensionProps = propsFactory({\n  height: [Number, String],\n  maxHeight: [Number, String],\n  maxWidth: [Number, String],\n  minHeight: [Number, String],\n  minWidth: [Number, String],\n  width: [Number, String],\n}, 'dimension')\n\nexport function useDimension (props: DimensionProps) {\n  const dimensionStyles = computed(() => ({\n    height: convertToUnit(props.height),\n    maxHeight: convertToUnit(props.maxHeight),\n    maxWidth: convertToUnit(props.maxWidth),\n    minHeight: convertToUnit(props.minHeight),\n    minWidth: convertToUnit(props.minWidth),\n    width: convertToUnit(props.width),\n  }))\n\n  return { dimensionStyles }\n}\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nexport interface BorderProps {\n  border?: boolean | number | string\n}\n\n// Composables\nexport const makeBorderProps = propsFactory({\n  border: [Boolean, Number, String],\n}, 'border')\n\nexport function useBorder (\n  props: BorderProps,\n  name = getCurrentInstanceName(),\n) {\n  const borderClasses = computed(() => {\n    const border = isRef(props) ? props.value : props.border\n    const classes: string[] = []\n\n    if (border === true || border === '') {\n      classes.push(`${name}--border`)\n    } else if (\n      typeof border === 'string' ||\n      border === 0\n    ) {\n      for (const value of String(border).split(' ')) {\n        classes.push(`border-${value}`)\n      }\n    }\n\n    return classes\n  })\n\n  return { borderClasses }\n}\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nexport interface ElevationProps {\n  elevation?: number | string | null\n}\n\n// Composables\nexport const makeElevationProps = propsFactory({\n  elevation: {\n    type: [Number, String],\n    validator (v: any) {\n      const value = parseInt(v)\n\n      return (\n        !isNaN(value) &&\n        value >= 0 &&\n        // Material Design has a maximum elevation of 24\n        // https://material.io/design/environment/elevation.html#default-elevations\n        value <= 24\n      )\n    },\n  },\n}, 'elevation')\n\ntype ElevationData = {\n  elevationClasses: Ref<string[]>\n}\n\nexport function useElevation (props: ElevationProps | Ref<number | string | undefined>): ElevationData {\n  const elevationClasses = computed(() => {\n    const elevation = isRef(props) ? props.value : props.elevation\n    const classes: string[] = []\n\n    if (elevation == null) return classes\n\n    classes.push(`elevation-${elevation}`)\n\n    return classes\n  })\n\n  return { elevationClasses }\n}\n", "// Composables\nimport { useColor } from '@/composables/color'\n\n// Utilities\nimport { computed, unref } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { MaybeRef } from '@/util'\n\nexport const allowedVariants = [\n  'elevated',\n  'flat',\n  'tonal',\n  'outlined',\n  'text',\n  'plain',\n] as const\n\nexport type Variant = typeof allowedVariants[number]\n\nexport interface VariantProps {\n  color?: string\n  variant: Variant\n}\n\nexport function genOverlays (isClickable: boolean, name: string) {\n  return (\n    <>\n      { isClickable && <span key=\"overlay\" class={`${name}__overlay`} /> }\n\n      <span key=\"underlay\" class={`${name}__underlay`} />\n    </>\n  )\n}\n\nexport const makeVariantProps = propsFactory({\n  color: String,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'elevated',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n}, 'variant')\n\nexport function useVariant (\n  props: MaybeRef<VariantProps>,\n  name = getCurrentInstanceName(),\n) {\n  const variantClasses = computed(() => {\n    const { variant } = unref(props)\n    return `${name}--variant-${variant}`\n  })\n\n  const { colorClasses, colorStyles } = useColor(computed(() => {\n    const { variant, color } = unref(props)\n    return {\n      [['elevated', 'flat'].includes(variant) ? 'background' : 'text']: color,\n    }\n  }))\n\n  return { colorClasses, colorStyles, variantClasses }\n}\n", "// Composables\nimport { useRtl } from '@/composables/rtl'\n\n// Utilities\nimport { computed } from 'vue'\nimport { parseAnchor, propsFactory } from '@/util'\n\n// Types\nimport type { CSSProperties, PropType } from 'vue'\nimport type { Anchor } from '@/util'\n\nconst oppositeMap = {\n  center: 'center',\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left',\n} as const\n\nexport interface LocationProps {\n  location: Anchor | undefined\n}\n\nexport const makeLocationProps = propsFactory({\n  location: String as PropType<Anchor>,\n}, 'location')\n\nexport function useLocation (props: LocationProps, opposite = false, offset?: (side: string) => number) {\n  const { isRtl } = useRtl()\n\n  const locationStyles = computed(() => {\n    if (!props.location) return {}\n\n    const { side, align } = parseAnchor(\n      props.location.split(' ').length > 1\n        ? props.location\n        : `${props.location} center` as Anchor,\n      isRtl.value\n    )\n\n    function getOffset (side: string) {\n      return offset\n        ? offset(side)\n        : 0\n    }\n\n    const styles = {} as CSSProperties\n\n    if (side !== 'center') {\n      if (opposite) styles[oppositeMap[side]] = `calc(100% - ${getOffset(side)}px)`\n      else styles[side] = 0\n    }\n    if (align !== 'center') {\n      if (opposite) styles[oppositeMap[align]] = `calc(100% - ${getOffset(align)}px)`\n      else styles[align] = 0\n    } else {\n      if (side === 'center') styles.top = styles.left = '50%'\n      else {\n        styles[({\n          top: 'left',\n          bottom: 'left',\n          left: 'top',\n          right: 'top',\n        } as const)[side]] = '50%'\n      }\n      styles.transform = {\n        top: 'translateX(-50%)',\n        bottom: 'translateX(-50%)',\n        left: 'translateY(-50%)',\n        right: 'translateY(-50%)',\n        center: 'translate(-50%, -50%)',\n      }[side]\n    }\n\n    return styles\n  })\n\n  return { locationStyles }\n}\n", "// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst positionValues = ['static', 'relative', 'fixed', 'absolute', 'sticky'] as const\n\ntype Position = typeof positionValues[number]\n\nexport interface PositionProps {\n  position: Position | undefined\n}\n\n// Composables\nexport const makePositionProps = propsFactory({\n  position: {\n    type: String as PropType<Position>,\n    validator: /* istanbul ignore next */ (v: any) => positionValues.includes(v),\n  },\n}, 'position')\n\nexport function usePosition (\n  props: PositionProps,\n  name = getCurrentInstanceName(),\n) {\n  const positionClasses = computed(() => {\n    return props.position ? `${name}--${props.position}` : undefined\n  })\n\n  return { positionClasses }\n}\n", "// Utilities\nimport { getCurrentInstance, IN_BROWSER, propsFactory } from '@/util'\nimport {\n  computed,\n  nextTick,\n  onScopeDispose,\n  resolveDynamicComponent,\n  toRef,\n} from 'vue'\n\n// Types\nimport type { ComputedRef, PropType, Ref, SetupContext } from 'vue'\nimport type {\n  RouterLink as _RouterLink,\n  useLink as _useLink,\n  NavigationGuardNext,\n  RouteLocationNormalizedLoaded,\n  RouteLocationRaw,\n  Router,\n} from 'vue-router'\n\nexport function useRoute (): Ref<RouteLocationNormalizedLoaded | undefined> {\n  const vm = getCurrentInstance('useRoute')\n\n  return computed(() => vm?.proxy?.$route)\n}\n\nexport function useRouter (): Router | undefined {\n  return getCurrentInstance('useRouter')?.proxy?.$router\n}\n\nexport interface LinkProps {\n  href?: string\n  replace?: boolean\n  to?: RouteLocationRaw\n}\n\nexport interface UseLink extends Omit<Partial<ReturnType<typeof _useLink>>, 'href'> {\n  isLink: ComputedRef<boolean>\n  isClickable: ComputedRef<boolean>\n  href: Ref<string | undefined>\n}\n\nexport function useLink (props: LinkProps, attrs: SetupContext['attrs']): UseLink {\n  const RouterLink = resolveDynamicComponent('RouterLink') as typeof _RouterLink | string\n\n  const isLink = computed(() => !!(props.href || props.to))\n  const isClickable = computed(() => {\n    return isLink?.value || !!(attrs.onClick || attrs.onClickOnce)\n  })\n\n  if (typeof RouterLink === 'string') {\n    return {\n      isLink,\n      isClickable,\n      href: toRef(props, 'href'),\n    }\n  }\n\n  const link = props.to ? RouterLink.useLink(props as Required<LinkProps>) : undefined\n\n  return {\n    ...link,\n    isLink,\n    isClickable,\n    href: computed(() => props.to ? link?.route.value.href : props.href),\n  }\n}\n\nexport const makeRouterProps = propsFactory({\n  href: String,\n  replace: Boolean,\n  to: [String, Object] as PropType<RouteLocationRaw>,\n}, 'router')\n\nlet inTransition = false\nexport function useBackButton (router: Router | undefined, cb: (next: NavigationGuardNext) => void) {\n  let popped = false\n  let removeBefore: (() => void) | undefined\n  let removeAfter: (() => void) | undefined\n\n  if (IN_BROWSER) {\n    nextTick(() => {\n      window.addEventListener('popstate', onPopstate)\n      removeBefore = router?.beforeEach((to, from, next) => {\n        if (!inTransition) {\n          setTimeout(() => popped ? cb(next) : next())\n        } else {\n          popped ? cb(next) : next()\n        }\n        inTransition = true\n      })\n      removeAfter = router?.afterEach(() => {\n        inTransition = false\n      })\n    })\n    onScopeDispose(() => {\n      window.removeEventListener('popstate', onPopstate)\n      removeBefore?.()\n      removeAfter?.()\n    })\n  }\n\n  function onPopstate (e: PopStateEvent) {\n    if (e.state?.replaced) return\n\n    popped = true\n    setTimeout(() => (popped = false))\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUO,IAAMA,oBAAoBC,gBAAgB;EAC/CC,MAAM;EAENC,OAAO;IACLC,UAAUC;IACVC,OAAO,CAACC,QAAQC,MAAT;IACPC,MAAMC;IACNC,QAAQD;EAJH;EAOPE,MAAOT,OAAF,MAAoB;AAAA,QAAX;MAAEU;IAAF,IAAW;AACvB,UAAM;MAAET;MAAUE;MAAOG;MAAME;IAAzB,IAAoCG,OAAOX,KAAD;AAEhDY,oBAAgBX,UAAU;MACxBE;MACAG;MACAE;IAHwB,CAAX;AAMf,WAAO,MAAA;AAAA,UAAA;AAAA,cAAA,iBAAME,MAAMG,YAAZ,OAAA,SAAM,eAAA,KAAAH,KAAK;IAAX;EACR;AApB8C,CAAD;;;ACKzC,IAAMI,qBAAqBC,aAAa;EAC7CC,QAAQ,CAACC,QAAQC,MAAT;EACRC,WAAW,CAACF,QAAQC,MAAT;EACXE,UAAU,CAACH,QAAQC,MAAT;EACVG,WAAW,CAACJ,QAAQC,MAAT;EACXI,UAAU,CAACL,QAAQC,MAAT;EACVK,OAAO,CAACN,QAAQC,MAAT;AANsC,GAO5C,WAP2C;AASvC,SAASM,aAAcC,OAAuB;AACnD,QAAMC,kBAAkBC,SAAS,OAAO;IACtCX,QAAQY,cAAcH,MAAMT,MAAP;IACrBG,WAAWS,cAAcH,MAAMN,SAAP;IACxBC,UAAUQ,cAAcH,MAAML,QAAP;IACvBC,WAAWO,cAAcH,MAAMJ,SAAP;IACxBC,UAAUM,cAAcH,MAAMH,QAAP;IACvBC,OAAOK,cAAcH,MAAMF,KAAP;EANkB,EAAR;AAShC,SAAO;IAAEG;EAAF;AACR;;;ACzBM,IAAMG,kBAAkBC,aAAa;EAC1CC,QAAQ,CAACC,SAASC,QAAQC,MAAlB;AADkC,GAEzC,QAFwC;AAIpC,SAASC,UACdC,OAEA;AAAA,MADAC,OACA,UAAA,SAAA,KAAA,UAAA,OAAA,SAAA,UAAA,KADOC,uBAAsB;AAE7B,QAAMC,gBAAgBC,SAAS,MAAM;AACnC,UAAMT,SAASU,MAAML,KAAD,IAAUA,MAAMM,QAAQN,MAAML;AAClD,UAAMY,UAAoB,CAAA;AAE1B,QAAIZ,WAAW,QAAQA,WAAW,IAAI;AACpCY,cAAQC,KAAM,GAAEP,cAAhB;IACD,WACC,OAAON,WAAW,YAClBA,WAAW,GACX;AACA,iBAAWW,SAASR,OAAOH,MAAD,EAASc,MAAM,GAArB,GAA2B;AAC7CF,gBAAQC,KAAM,UAASF,OAAvB;MACD;IACF;AAED,WAAOC;EACR,CAhB6B;AAkB9B,SAAO;IAAEJ;EAAF;AACR;;;AC1BM,IAAMO,qBAAqBC,aAAa;EAC7CC,WAAW;IACTC,MAAM,CAACC,QAAQC,MAAT;IACNC,UAAWC,GAAQ;AACjB,YAAMC,QAAQC,SAASF,CAAD;AAEtB,aACE,CAACG,MAAMF,KAAD,KACNA,SAAS,KAGTA,SAAS;IAEZ;EAZQ;AADkC,GAe5C,WAf2C;AAqBvC,SAASG,aAAcC,OAAyE;AACrG,QAAMC,mBAAmBC,SAAS,MAAM;AACtC,UAAMZ,YAAYa,MAAMH,KAAD,IAAUA,MAAMJ,QAAQI,MAAMV;AACrD,UAAMc,UAAoB,CAAA;AAE1B,QAAId,aAAa;AAAM,aAAOc;AAE9BA,YAAQC,KAAM,aAAYf,WAA1B;AAEA,WAAOc;EACR,CATgC;AAWjC,SAAO;IAAEH;EAAF;AACR;;;AClCM,IAAMK,kBAAkB,CAC7B,YACA,QACA,SACA,YACA,QACA,OAN6B;AAgBxB,SAASC,YAAaC,aAAsBC,MAAc;AAC/D,SAAA,YAAA,UAAA,MAAA,CAEMD,eAAW,YAAA,QAAA;IAAA,OAAc;IAAd,SAAgC,GAAEC;EAAlC,GAAA,IAAA,GAFjB,YAAA,QAAA;IAAA,OAIc;IAJd,SAIiC,GAAEA;EAJnC,GAAA,IAAA,CAAA,CAAA;AAOD;AAEM,IAAMC,mBAAmBC,aAAa;EAC3CC,OAAOC;EACPC,SAAS;IACPC,MAAMF;IACNG,SAAS;IACTC,WAAYC,OAAWZ,gBAAgBa,SAASD,CAAzB;EAHhB;AAFkC,GAO1C,SAPyC;AASrC,SAASE,WACdC,OAEA;AAAA,MADAZ,OACA,UAAA,SAAA,KAAA,UAAA,OAAA,SAAA,UAAA,KADOa,uBAAsB;AAE7B,QAAMC,iBAAiBC,SAAS,MAAM;AACpC,UAAM;MAAEV;IAAF,IAAcW,MAAMJ,KAAD;AACzB,WAAQ,GAAEZ,iBAAiBK;EAC5B,CAH8B;AAK/B,QAAM;IAAEY;IAAcC;EAAhB,IAAgCC,SAASJ,SAAS,MAAM;AAC5D,UAAM;MAAEV;MAASF;IAAX,IAAqBa,MAAMJ,KAAD;AAChC,WAAO;MACL,CAAC,CAAC,YAAY,MAAb,EAAqBF,SAASL,OAA9B,IAAyC,eAAe,SAASF;IAD7D;EAGR,CALsD,CAAT;AAO9C,SAAO;IAAEc;IAAcC;IAAaJ;EAA7B;AACR;;;ACpDD,IAAMM,cAAc;EAClBC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC,MAAM;EACNC,OAAO;AALW;AAYb,IAAMC,oBAAoBC,aAAa;EAC5CC,UAAUC;AADkC,GAE3C,UAF0C;AAItC,SAASC,YAAaC,OAA2E;AAAA,MAArDC,WAAqD,UAAA,SAAA,KAAA,UAAA,OAAA,SAAA,UAAA,KAA1C;AAA0C,MAAnCC,SAAmC,UAAA,SAAA,IAAA,UAAA,KAAA;AACtG,QAAM;IAAEC;EAAF,IAAYC,OAAM;AAExB,QAAMC,iBAAiBC,SAAS,MAAM;AACpC,QAAI,CAACN,MAAMH;AAAU,aAAO,CAAA;AAE5B,UAAM;MAAEU;MAAMC;IAAR,IAAkBC,YACtBT,MAAMH,SAASa,MAAM,GAArB,EAA0BC,SAAS,IAC/BX,MAAMH,WACL,GAAEG,MAAMH,mBACbM,MAAMS,KAJ2B;AAOnC,aAASC,UAAWN,OAAc;AAChC,aAAOL,SACHA,OAAOK,KAAD,IACN;IACL;AAED,UAAMO,SAAS,CAAA;AAEf,QAAIP,SAAS,UAAU;AACrB,UAAIN;AAAUa,eAAOzB,YAAYkB,SAAU,eAAcM,UAAUN,IAAD;;AAC7DO,eAAOP,QAAQ;IACrB;AACD,QAAIC,UAAU,UAAU;AACtB,UAAIP;AAAUa,eAAOzB,YAAYmB,UAAW,eAAcK,UAAUL,KAAD;;AAC9DM,eAAON,SAAS;IACtB,OAAM;AACL,UAAID,SAAS;AAAUO,eAAOvB,MAAMuB,OAAOrB,OAAO;WAC7C;AACHqB,eAAQ;UACNvB,KAAK;UACLC,QAAQ;UACRC,MAAM;UACNC,OAAO;QAJD,EAKIa,SAAS;MACtB;AACDO,aAAOC,YAAY;QACjBxB,KAAK;QACLC,QAAQ;QACRC,MAAM;QACNC,OAAO;QACPJ,QAAQ;MALS,EAMjBiB;IACH;AAED,WAAOO;EACR,CA7C8B;AA+C/B,SAAO;IAAET;EAAF;AACR;;;ACvED,IAAMW,iBAAiB,CAAC,UAAU,YAAY,SAAS,YAAY,QAA5C;AAShB,IAAMC,oBAAoBC,aAAa;EAC5CC,UAAU;IACRC,MAAMC;IACNC,WAAuCC,OAAWP,eAAeQ,SAASD,CAAxB;EAF1C;AADkC,GAK3C,UAL0C;AAOtC,SAASE,YACdC,OAEA;AAAA,MADAC,OACA,UAAA,SAAA,KAAA,UAAA,OAAA,SAAA,UAAA,KADOC,uBAAsB;AAE7B,QAAMC,kBAAkBC,SAAS,MAAM;AACrC,WAAOJ,MAAMP,WAAY,GAAEQ,SAASD,MAAMP,aAAaY;EACxD,CAF+B;AAIhC,SAAO;IAAEF;EAAF;AACR;;;ACLM,SAASG,YAAiC;AAAA,MAAA,qBAAA;AAC/C,UAAA,sBAAOC,mBAAmB,WAAD,MAAzB,OAAA,UAAA,wBAAO,oBAAiCC,UAAxC,OAAA,SAAO,sBAAwCC;AAChD;AAcM,SAASC,QAASC,OAAkBC,OAAuC;AAChF,QAAMC,aAAaC,wBAAwB,YAAD;AAE1C,QAAMC,SAASC,SAAS,MAAM,CAAC,EAAEL,MAAMM,QAAQN,MAAMO,GAA9B;AACvB,QAAMC,cAAcH,SAAS,MAAM;AACjC,YAAOD,UAAM,OAAN,SAAAA,OAAQK,UAAS,CAAC,EAAER,MAAMS,WAAWT,MAAMU;EACnD,CAF2B;AAI5B,MAAI,OAAOT,eAAe,UAAU;AAClC,WAAO;MACLE;MACAI;MACAF,MAAMM,MAAMZ,OAAO,MAAR;IAHN;EAKR;AAED,QAAMa,OAAOb,MAAMO,KAAKL,WAAWH,QAAQC,KAAnB,IAAmDc;AAE3E,SAAO;IACL,GAAGD;IACHT;IACAI;IACAF,MAAMD,SAAS,MAAML,MAAMO,KAAKM,QAAX,OAAA,SAAWA,KAAME,MAAMN,MAAMH,OAAON,MAAMM,IAAjD;EAJT;AAMR;AAEM,IAAMU,kBAAkBC,aAAa;EAC1CX,MAAMY;EACNC,SAASC;EACTb,IAAI,CAACW,QAAQG,MAAT;AAHsC,GAIzC,QAJwC;AAM3C,IAAIC,eAAe;AACZ,SAASC,cAAeC,QAA4BC,IAAyC;AAClG,MAAIC,SAAS;AACb,MAAIC;AACJ,MAAIC;AAEJ,MAAIC,YAAY;AACdC,aAAS,MAAM;AACbC,aAAOC,iBAAiB,YAAYC,UAApC;AACAN,qBAAeH,UAAH,OAAA,SAAGA,OAAQU,WAAW,CAAC3B,IAAI4B,MAAMC,SAAS;AACpD,YAAI,CAACd,cAAc;AACjBe,qBAAW,MAAMX,SAASD,GAAGW,IAAD,IAASA,KAAI,CAA/B;QACX,OAAM;AACLV,mBAASD,GAAGW,IAAD,IAASA,KAAI;QACzB;AACDd,uBAAe;MAChB,CAPc;AAQfM,oBAAcJ,UAAH,OAAA,SAAGA,OAAQc,UAAU,MAAM;AACpChB,uBAAe;MAChB,CAFa;IAGf,CAbO;AAcRiB,mBAAe,MAAM;AAAA,UAAA,eAAA;AACnBR,aAAOS,oBAAoB,YAAYP,UAAvC;AACA,OAAA,gBAAAN,iBAAY,OAAZ,SAAA,cAAA;AACA,OAAA,eAAAC,gBAAW,OAAX,SAAA,aAAA;IACD,CAJa;EAKf;AAED,WAASK,WAAYQ,GAAkB;AAAA,QAAA;AACrC,SAAA,WAAIA,EAAEC,UAAN,QAAI,SAASC;AAAU;AAEvBjB,aAAS;AACTW,eAAW,MAAOX,SAAS,KAAjB;EACX;AACF;",
  "names": ["VDefaultsProvider", "defineComponent", "name", "props", "defaults", "Object", "reset", "Number", "String", "root", "Boolean", "scoped", "setup", "slots", "toRefs", "provideDefaults", "default", "makeDimensionProps", "propsFactory", "height", "Number", "String", "maxHeight", "maxWidth", "minHeight", "minWidth", "width", "useDimension", "props", "dimensionStyles", "computed", "convertToUnit", "makeBorderProps", "propsFactory", "border", "Boolean", "Number", "String", "useBorder", "props", "name", "getCurrentInstanceName", "borderClasses", "computed", "isRef", "value", "classes", "push", "split", "makeElevationProps", "propsFactory", "elevation", "type", "Number", "String", "validator", "v", "value", "parseInt", "isNaN", "useElevation", "props", "elevationClasses", "computed", "isRef", "classes", "push", "allowedVariants", "genOverlays", "isClickable", "name", "makeVariantProps", "propsFactory", "color", "String", "variant", "type", "default", "validator", "v", "includes", "useVariant", "props", "getCurrentInstanceName", "variantClasses", "computed", "unref", "colorClasses", "colorStyles", "useColor", "oppositeMap", "center", "top", "bottom", "left", "right", "makeLocationProps", "propsFactory", "location", "String", "useLocation", "props", "opposite", "offset", "isRtl", "useRtl", "locationStyles", "computed", "side", "align", "parseAnchor", "split", "length", "value", "getOffset", "styles", "transform", "positionValues", "makePositionProps", "propsFactory", "position", "type", "String", "validator", "v", "includes", "usePosition", "props", "name", "getCurrentInstanceName", "positionClasses", "computed", "undefined", "useRouter", "getCurrentInstance", "proxy", "$router", "useLink", "props", "attrs", "RouterLink", "resolveDynamicComponent", "isLink", "computed", "href", "to", "isClickable", "value", "onClick", "onClickOnce", "toRef", "link", "undefined", "route", "makeRouterProps", "propsFactory", "String", "replace", "Boolean", "Object", "inTransition", "useBackButton", "router", "cb", "popped", "removeBefore", "removeAfter", "IN_BROWSER", "nextTick", "window", "addEventListener", "onPopstate", "beforeEach", "from", "next", "setTimeout", "afterEach", "onScopeDispose", "removeEventListener", "e", "state", "replaced"]
}
